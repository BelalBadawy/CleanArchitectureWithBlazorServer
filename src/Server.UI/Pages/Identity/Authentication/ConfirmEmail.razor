@page "/pages/authentication/ConfirmEmail"

@using System.Text
@using CleanArchitecture.Blazor.Application.Features.Identity.Commands.SendWelcome
@using CleanArchitecture.Blazor.Domain.Identity
@using FluentEmail.Core.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject IStringLocalizer<ConfirmEmail> L
@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ConfirmEmail> Logger
@inject ISender Sender
<PageTitle>@L["Confirm email"]</PageTitle>

<h1>@L["Confirm email"]</h1>
<StatusMessage Message="@statusMessage" />
<a class="mud-button-root mud-button mud-button-text mud-button-text-default mud-button-text-size-medium mud-ripple" href="/pages/authentication/login">@L["Return to Login"]</a>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage =string.Format(L["Error loading user with ID {0}"],UserId);
        }
        else
        {
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);
            if (result.Succeeded)
            {
                var sentResult = await Sender.Send(new SendWelcomeCommand(user.Email));
                if (sentResult.Succeeded)
                {
                    Logger.LogInformation("{UserName} Activated Successfully!", user.Email);
                }
            }
            statusMessage = result.Succeeded ? L["Thank you for confirming your email."] : L["Error confirming your email."];
        }
    }
     
}
